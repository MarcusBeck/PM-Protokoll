*** Rollenverteilung
Projektleiter: Marcus Beck (Ersatz: Manuel Matt)
Aufgabe - Repräsentant nach außen (zB externe Treffen mit Studieren ohne Grenzen)

Schriftführer: Markus Ring
Aufgabe: Notizen der Treffen, Github hochladen der Notizen

Moderator: Frank Schlickeisen (Ersatz: Kristian)
Aufgabe: Struktur in unserer Kommunikation

*** Regeln
- Demokratie (Quorum, einfache, absolute Mehrheit?) - Einfache Mehrheit - Vetorecht bei eigenen Aufgaben - 
- fixe Treffen einmal in der Woche (Dienstag 15 Uhr)
- Klare Aufgabenverteilung (kurzfristige Ziele)

*** Kommunikationsregeln
- Reaktion auf Emails 1 Werktag
- Hilfesuche/-stellung bei fachlichen oder zeitlichen Problemen
- Wir wollen: Masterplan mit Mindestzielen - Schwammig für große Ziele, konkreter bei kurzfristigen

*** Projektauftrag
Fragen: Mindestziele? 
- Zielsetzung: Forum, sortieren, suchen und Stickies
               Cloud: Daten teilen, Cloud, Openatrium, ownCloud, Apps
- Was für Setup haben sie? Zugriff? Open Source? Kopie machen? Open Atrium?
  Websiteadmin? 
  Wo machen wir ein Testsetup? 
  Was ist Opencloud? 
- Termine?
- Zeit: 5h/Woche? 
 

*** Aufgaben
**** DONE git [3/3] (5*5h=25)
     CLOSED: [2013-05-15 Wed 15:30]
     - State "DONE"       from "TODO"       [2013-05-15 Wed 15:30]
***** DONE Einarbeitung 2h Dirk + 2h (alle)
      CLOSED: [2013-05-21 Tue 15:42]
      - State "DONE"       from "TODO"       [2013-05-21 Tue 15:42]
***** DONE Aufsetzen git-Repository 2h (eine Person)
      CLOSED: [2013-05-21 Tue 15:42]
      - State "DONE"       from "TODO"       [2013-05-21 Tue 15:42]
***** DONE Klären wie git benutzt wird 1h (alle)
      CLOSED: [2013-05-21 Tue 15:42]
      - State "DONE"       from "TODO"       [2013-05-21 Tue 15:42]
**** TODO Lernen von Sprachen (mysql, php) (24+5*17h=109)
***** TODO mysql 4h Kristian + 1+2h jeder (zusammen mit phpMyAdmin)
****** TODO Datenbank kennenlernen 2h jeder
***** DONE php (8h einer + 2+3h jeder) Kristian
      CLOSED: [2013-05-28 Tue 16:25]
      - State "DONE"       from "TODO"       [2013-05-28 Tue 16:25]
        - einer bereitet ein Tutorial vor und stellt es vor
        - gescheites php Tutorial finden 
        - Wie man's schreibt
        - Kommunikation zur Datenbank  
        - Beispiele zusammenstellen 
***** DONE html, css, javascript (4h Marcus Beck + 1+2h jeder)
      CLOSED: [2013-05-21 Tue 15:41]
      - State "DONE"       from "TODO"       [2013-05-21 Tue 15:41]
***** DONE Server - Apache etc (4h Marcus Beck +1+2h jeder)
      CLOSED: [2013-05-21 Tue 15:41]

**** TODO Kennenlernen der benutzten Pakete und Infrastruktur [1/3] (4+4*5*3=64)
      - State "DONE"       from "TODO"       [2013-05-21 Tue 15:41]
***** DONE phpMyAdmin Kristian - nur Bedienung
      CLOSED: [2013-06-11 Tue 15:26]
      - State "DONE"       from "TODO"       [2013-06-11 Tue 15:26]
***** TODO openAtrium
	 - Einarbeitung Bedienung (einer 4h)
         - Vortrag Bedienung und Kennen lernen (alle 1+2h) 
         - Einarbeitung Source Code & API (einer 4h)
	 - Vortrag Source Code & API  (alle 1+2h)
***** TODO ownCloud - hat nur API
	 - Einarbeitung (einer 4h)
         - Vortrag und Kennen lernen (alle 1+2h)
**** TODO Aufsetzen Testserver/System (5h Manuel +5*1h=10)
     - Testserver und SOG-Openatrium-Branch und ownCloud
     - Zugriff für alle
     - Linux oder WIndows
     - Mit Dirk unterhalten für den Dump und das Aufsetzen

**** Informieren über weiteres (5h)
     - ownCloud-Virenscanner?

**** TODO Programmieren des Zeugs (150h)
***** TODO Owncloud-Integration (110h)
      - Seite mit Upload Formular [/]
        - [ ]User-Authentifizierung (20h)
        - [ ] Kommunikation mit openAtrium (20h)
        - [ ] Ordner erstellen (20h)
        - [ ] Gruppenordner erstellen, auslesen, sichtbar machen (20h)
      - ownCloud in openAtrium 
	- Wie funktioniert Upload bisher? (20h)
        - ownCloud Reiter in openAtrium? (Modul) (20h) 
	- Zugriffsberechtigung - Regeln verstärken  (20h)
	  - Idee: Sichere Dateien in einem Ordner 
	    - Zu jeder Datei Liste von Usern mit Zugriff (20h)
	    - Jeder Datei braucht Besitzer (20h)
	  - Struktur in openAtrium oder ownCloud (20h)
***** Optional Foren-Funktionalität 
     
**** Management Aufgaben 
     - Kommunikation mit Dirk
     - Kommunikation mit Frau Mühleisen/Spreckelsen
     - Controlling - Ziele und Zeitplan gegen erreichtes
     - Katze auftreiben
     - Katze repräsentieren
     - Katze füttern 
     - Katze zum Tierarzt bringen (impfen etc.)
     - Katze einschläfern
     - Gruppe über Tod der Katze informieren und trösten
     - Katze ersetzen -> beginne von vorne

**** Aufwandsschätzung: 40+109+64+150=363, 20Wochen*25h=500h
*** Risiken
**** hohe Kosten 
 - Aufwand verschätzt - wöchentlichen Sitzungen - Kontrolle - regelmäßige Abschätzung gegen Realität
 
 - Zu blöd - weinen - Hilfe erbitten
**** hohes Risiko
 - Kaffe geht aus
 - jemand fällt aus - hoffentlich passt die SChätzung oben...


 


*** Teamsitzung am Dienstag 7.5.2013 L914 15:15-17:15
     - git Einführung von Dirk
     - übernächste Woche (wer macht was) -> Server Marcus
     - Dirk fragen nach Server Setup und Dump
     - github Acc -> Marcus und jeder der möchte
     - forken von Marcus
*** Teamsitzung am Mittwoch 15.5.2013 
    - Marcus erzählt über Server

      Besprechung der nächsten Wochen - Verteilung php, Datenbanken, openatrium (Manuel)
      Wie funktioniert ein Server?
      URL wird übersetzt in IP durch DNS (Dynamic Name Server).
      Heute installieren wir uns einen Webserver: XAMPP Paket für Apache-Server, MySQL, PHP, PEAR, Perl, phpMyAdmin. Website www.apachefriends.org
      xampp-control startet die verschiedenen Dienste
      Eigene IP: localhost/xampp, oder 127.0.0.1/xampp 134.34.211.216
      Im htdocs Ordner finden sich alle von außen erreichbaren Dokumente
      Falls man eine index.htm oder .html File in einem Ordner hat springt der Webbrowser automatisch auf diese.
      Beispieldatei: Grundgeruest.htm - Beispiele von verschiedenen Tags
      HTML: Tags <öffnen> </schließen>
      Attribute von Tags <p align="center">
      Ungeordnete und geordnete Listen
      Tabellen - <table> <tr> <th> <td> Tags
      Trennlinien <hr>
     
      CSS - Cascading Style Sheets
      Attribut style="Definition" bei fast jedem Tag, wird in Untertags vererbt
      Block-Elemente <div> 
      CSS2.htm
      Styles können auch allgemein festgelegt werden (und diese kann auch extern in einer .css file gespeichert werden) zB body { blublub } oder auch als "Variable gespeichert werden #s1 { blub }, wiederaufgrufen mit id="s1". 
      Benutzt für div Positionierung: absolut, relativ

      JavaScript.html
      <script type="text/javascript"> danach dann javascript definition
      function onoff(){ } Änderung von Eigenschaften von Elementen
      <a href="javascript:onoff()">
      Javascript wird vom Browser ausgeführt

      php Formular - php wird vom Server ausgeführt und erzeugt eine HTML-Seite
      <?php echo '<p>Hallo PHP-Welt!</p>'; ?> Gibt eine HTML-Zeile aus
      <form action="formular2.php" method="get"> 
      <input type="submit" value="Name!"/> Button
      </form>

      Hallo <?echo $_GET['NAME']; ?>
      
      Nachschlagewerk: Selfhtml de.selfhtml.org

      Owncloud Installation (Seite owncloud.org)
      Ordner entpacken und in htdocs Ordner verschieben. 

      Openatrium Installation - Zip runterladen von openatrium.com, in htdocs kopieren
      BrowserInstallation - Datenbankerstellung notwendig

*** Teamsitzung am Dienstag 21.5.2013
    - Kristian erzählt was über php (doch nicht - verschoben auf nächste Woche)
    - Unterhaltung über Planung, Ordnung der Vorträge
    - git Unterhaltung - 
    - Manuel liest: ownCloud Administrator's Manual - Release 5.0    
    - Tutorialspoint.com - PHP-Tutorial  Simply easy learning
    - Wir machen alle nichts bis zum nächsten Mal. 
*** Teamsitzung 28.5.2013
    (- Manuel erzählt was über Openatrium - verschoben auf nächste Woche)
    - L914
    - Kristian erzählt etwas über php, mysql - Korrektur: Nur php
    - php-Einbindung in html: Hello World - Beispiel 
      <?php
      echo "Hello World!";
      ?>
    - Client - HTML, CSS, Javascript
      Server - PHP, mysql
      Auf Anfrage des Clients führt der Server die PHP-Datei aus und schickt die entstehende HTML-Ausgabe zurück. Der PHP-Code wird nicht mitgeschickt.
    - Kommentare in php // /* */, diese werden auch nicht mitgeschickt.
    - Variablen: $name = Wert - keine Typinitialisierung. Ausgabe mit Verknüpfung mit . . " verhindern nicht Variablenersetzung, ' schon. Escape-Sequencen funktionieren ebenfalls in ", aber nicht in ' - diese sind aber nur im Quelltext, nicht unbedingt im HTML-Dokument.
    - http://www.w3schools.com/php/php_operatos.asp - Operatorenliste, Arithmetik, Vergleich und Arrays
    - if, else if - date(argument) gibt Zeit zurück im im Argument spezifiezierten Format.
    - selfphp.info Befehlsreferenz
    - switch - case 
    - Arrays - Indiziert und assoziiert. Indiziert wie in C $array[0]. Assoziiert wie hashtables, Key-Value-Pairs $age[Key]
    - Schleifen, while do while und for. foreach loop für Arrays (iteriert automatisch durch diese durch) foreach $x as $value
    - function add($x, $y){ $total=$x+$y; return $total;}
    - Formulare: <  method=get> schreibt die Werte in die Adressleiste.
      < method=post> für sicherere und längere Eingaben
    - get mit php auslesen $_GET[name]
    - post mit php auslesen $_POST[name]
    - Andere Dateien einbinden: include(name) zeigt Fehler and, require(name) gibt Fehler aus, require_once(name) bindet nur einmal ein. 
    - e.g. header.php, footer.php
    - File-I/O - $file=fopen(filename, Modus) , fgets, fclose
    - Datei Hochladen method="post" enctype="multi "
    - Beispiele aus http://www.w3schools/php/
    - Was ist ein Cookie? Kleine Textdatei auf der Clientseite.
    - Was ist eine Session? Kleine Textdatei auf der Serverseite - speichert wichtige Daten für eine einzelne Verbindung. 
*** Teamsitzung 4.6.2013
    (- Manuel erzählt was über Owncloud - verschoben auf nächste Woche)
    - Kristian erzählt was über phpmyadmin, mysql und ihre Verbindung, bisschen Aufbau von Datenbanken
    - Zuerst phpmyadmin - Damit verwaltet man Datenbanken, kann anschauen und erstellen. mysql ist die querysprache für die Datenbank. phpmyadmin ist ein Browser-Frontend dafür. Eine Datenbank ist in Tabellen organisiert. Jede Tabelle hat Spalten in denen die Datensätze drin stehen. Jede Spalte hat einen Namen und einen Datentyp, sowie eine Länge/Wert. Wir wollen die SQL-Anfragen mit php anlegen.
    - Datentypen: Text, LONGTEXT, ENUM, SET, BLOBs (werden binär gespeichert - Binary Large Object), Zahlen (float, int, usw), Zeiten (DATE, DATETIME, TIMESTAMP)
    - mysql01.php - Wie verbinde ich vom php aus zur Datenbank?
      $con = mysqli_connect("localhost","root","","PM");
      if(mysqli_connect_errno($con))
    - mysql02.php - Wie erzeuge ich eine neue Datenbank?
      mysqli_query($con, "CREATE DATABASE test_db") hier macht der Unterstrich seltsame Effekte
    - mysql03.php - erstellen einer Tabelle in der DB
      $sql = "CREATE TABLE persons(ID INT NOT NULL AUTO_INCREMENT, PRIMARY KEY(ID), FirstName CHAR(30), LastName CHAR(30), Age INT)";
      mysqli_query($con, $sql) - ID ist eindeutige ID, yay
    - mysql04.php - Einfügen von Datensätzen
      mysqli_query($con, "INSERT INTO Persons(FirstName, LastName, Age) VALUES ('Frank', ...) 
      Geht auch relativ direkt aus einem Formular. $_POST[lastname] $_GET[lastname] etc.
    -  mysql05.php - Einträge abrufen
       $result = mysqli_query($con, "SELECT * FROM Persons"); Holt alles aus Personen
       $row =mysqli_fetch_array($result) Liste eine Zeile=einen Eintrag aus der vom SELECT-query erstellen Tabelle
       $row['FirstName']
       "SELECT * FROM Persons WHERE Age=30" - holt die Einträge von Personen mit dem entsprechendem Alter...mit AND, OR, || usw kann man diese Bedingungen verknüpfen
    - mysql06.php - Datensätze ändern
      Mit "UPDATE " und "DELETE FROM Persons WHERE LastName='Name');
    - SQL Operationen - zB Sortieren, Umbenennen, Increment ändern, Verschieben, Löschen
    - Dumps - Man kann eine komplette Datenbank exportieren und wieder importieren. 
*** Teamsitzung 11.6.2013    
    - Manuel erzählt was über owncloud
    - Account von Dirk bekommen? xampp->htdocs hier sind die owncloud und openatrium ordnern
    - Eigene openatrium module sollten in openatrium /sites/all abgelegt werden
    - Man könnte die Owncloud Funktionalität relativ einfach und vllt sogar schneller in php selber machen. Werden gewisse Owncloud Funktionalitäten gebraucht.
    - Gruppen existieren Openatrium. AUch in owncloud?
    - Was ist Owncloud? - Erstmal ein Ordner in htdocs
    - Erster Start frägt nach Admin-Acc und Passwort. Dann ist man in der Owncloud-Oberfläche. 
    - Gruppen existieren und funktionieren. 
    - Dateien werden komplett unverschlüsselt gespeichert. 
    - Apptutorial, Marcus hat ein App-Gerüst für die Benutzerauthentifizierung gefunden. 553 Zeilen in dem App, usersql App. 
    - Was ist ein cron-job? Ein Job der alle [Zeitintervall] ausgeführt wird, richtiger Systemdienst. Webcron ist eine Webversion, Gegenstück: Ajax, wird bei jeder geladenen Seite ausgeführt. 
    - Apps für opencloud funktioniert, wenn man sie einfach in den Webordner kopiert und dann als admin in owncloud aktiviert. 
    - Mal mit der schon vorhandenen Datenbank probieren.
    - Aufgabe: Das App-Gerüst für Openatrium konfigurieren. 
*** Teamsitzung 18.6.2013
    - Frank erzählt: Geschichten über Openatrium - Mein Leben mit ...
    - Vielleicht SQL-Dump importieren
    - Community.openatrium.com Documentation
    - Openatrium - hat auch Gruppen, Admins usw usf
    - Dashboard kann man als User erstellen 
    - Importieren des Dumps: Mit phpmyadmin scheint es erstmal nicht zu gehen, da die Dateigroesse zu groß ist. mysql.exe -u root -p oa_sog
    Planung für die Zukunft
    Was getan werden muss: 
    - Openatrium 
     - HelloWorld Feature/Modul einfach mal programmieren - also ein Button der Hallo Welt ausgibt, an den wir dann später Owncloud-Interface dranhängen können. Wird von Frank gemacht. 
     - Wo ist momentane Userauthentifizierung abgelegt und wie kommt man dort ran? (Frank)
    - ownCloud: 
     - Zugriff auf openAtrium-mysql Datenbank - user_sql App (Manuel) 
     - openAtrium-Zugriff auf ownCloud 
       - Upload durch externe Funktionalitäten  (Marcus)
       - Auflisten von Dateien - owncloud hat files app (Marcus)
       - Einloggen durch externe Programme (Kristian)
*** Teamsitzung 25.6.2013
    - Erfahrungsberichte austauschen, Detailplanung
    - Projektende: 30.9. 
    - Openatrium Installation funktioniert nicht bei Frank und Kristian - Plan: Umgehung mit Installation auf USB-Stick. 
    - Kristian: Einloggen funktioniert. php-Skript, welches es als Post an die Seite gibt. POST geht, GET hätte das Problem, dass das Passwort sichtbar ist. Es gäbe auch einen Weg über Sessions und Cookies, aber wir verstehen die Cookies nicht so ganz. 
    - Wir möchten nicht direkt von Openatrium auf eine separate ownCloud-Seite, sondern es irgendwie einbetten. 
    - Marcus: Behandlung der Authentifizierungsdatenbank: Beispiel-Apps auf github: user_otp, user_redmine_ex, CloudPress (Dokumentation auf französisch) wäre ein Beispiel für die Verknüpfung von ownCloud mit Wordpress.
      Hello-Word App in ownCloud
      ownCloud Share API sollte die Kommunikation von außen nach ownCloud erlauben. zB remote.php erlaubt direkten Zugriff auf ownCloud apps. 
    - Frank: In Openatrium kann man als Administrator sehr viel machen - auch komplette Features einbinden. Beispiel einer module-Einbindung durch Kopieren des passenden Ordners etc. ...wir haben allerdings keine Ahnung wie wir das benutzen.  
    - Weitere Planung: Userauthentifizierung weiter machen. Kristian und Marcus schauen wie man mit remote.php weiter macht.
      Dump einbauen 
*** Teamsitzung 2.7.2013
    Erfahrungsberechte austauschen, weitermachen
*** Teams
*** Projektabschlusssitzung - Dienstag 16.7. 16:00 Büro Spreckelsen, Blarerstrasse 46 Technologiezentrum, blaues Gebäude. 
